name: Run tests

on:
  push:
    branches:
      - master
      - beta

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [18, 20]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - uses: ./.github/actions/es-lint

  build:
    name: Build
    runs-on: ubuntu-22.04
    needs: [lint]
    strategy:
      matrix:
        node-version: [18, 20]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - uses: ./.github/actions/build
      - name: Store build archive as artifact
        uses: actions/upload-artifact@v4
        with:
          name: kourou-build-${{ matrix.node-version }}
          path: ./kourou-*.tgz

  functional-test:
    name: Functional Tests
    runs-on: ubuntu-22.04
    needs: [build]
    strategy:
      matrix:
        node-version: [18, 20]
        test-set: [stdout, cucumber]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Recover previously built Kourou
        uses: actions/download-artifact@v4
        with:
          name: kourou-build-${{ matrix.node-version }}

      - name: Unpack and prepare artifact for tests
        run: |
          tar xfz ./kourou-*.tgz
          cp -fr .mocharc.json .nycrc tsconfig.json features test package/
      - uses: ./.github/actions/functional-test
        with:
          test-set: ${{ matrix.test-set }}

  release:
    name: Release process
    runs-on: ubuntu-22.04
    needs: [functional-test]
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install dependencies
        run: |
          npm clean-install
          npm run build

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          SEMANTIC_RELEASE_NPM_PUBLISH: "true"
          SEMANTIC_RELEASE_SLACK_WEBHOOK: ${{ secrets.SEMANTIC_RELEASE_SLACK_WEBHOOK }}
        run: npx semantic-release
